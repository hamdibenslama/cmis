{"swagger":"2.0","info":{"description":"Provides access to the search features of Alfresco","version":"1","title":"Alfresco Search REST API"},"basePath":"/alfresco/api/-default-/public/search/versions/1","consumes":["application/json"],"produces":["application/json"],"paths":{"/search":{"post":{"tags":["search"],"summary":"Searches Alfresco","description":"**Note**: this endpoint is available in Alfresco 5.2 and newer versions.\n\n**You specify all the parameters in this API in a JSON body**, URL parameters are not supported.\nA basic query looks like this:\n\n```JSON\n{\n  \"query\": {\n    \"query\": \"foo\"\n  }\n}\n```\n\n**Note:** These are the minimum possible query parameters.\n\nThe default search language is **afts** ([Alfresco Full Text Search](http://docs.alfresco.com/5.1/concepts/rm-searchsyntax-intro.html)), but you can also specify **cmis**, and **lucene**.\n\nA basic CMIS query looks like this:\n\n```JSON\n{\n  \"query\": {\n    \"query\": \"select * from cmis:folder\",\n    \"language\": \"cmis\"\n  }\n}\n```\n\nBy default, **results are limited to the first 100.**\nResults can be restricted using \"paging\". For example:\n```JSON\n\"paging\": {\n  \"maxItems\": \"50\",\n  \"skipCount\": \"28\"\n}\n```\nThis example would ensure that results are **limited by Final Size**,\nskipping the first 28 results and returning the next 50.\n\nAlternatively, you can limit the results by using the **limits JSON body parameter**. For example,\n```JSON\n\"limits\": {\n  \"permissionEvaluationTime\": 20000,\n  \"permissionEvaluationCount\": 2000\n}\n```\n\nYou can use the **include JSON body parameter** to return additional information.\nThis works in the same way as in the /nodes/{nodeId}/children method in the core API. For example:\n```JSON\n\"include\": [\"aspectNames\", \"properties\", \"isLink\"]\n```\n\nYou can use the **fields JSON body parameter** to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.\nThis works in the same way as in the /nodes/{nodeId}/children method in the core API. For example:\n```JSON\n\"fields\": [\"id\", \"name\", \"search\"]\n```\n\nYou can sort the results using the **sort JSON body parameter**, for example:\n```JSON\n\"sort\": [{\"type\":\"FIELD\", \"field\":\"cm:description\", \"ascending\":\"true\"}]\n```\n**Note:** the **sort** parameter is not supported for CMIS queries.\n\nBy default, search uses the **\"nodes\" location**, which is the **content store known as workspace://SpacesStore**.\nTo change the scope to another location you can use the **locations JSON body parameter**. You can specify either **nodes** (the default), **versions** or **deleted-nodes**.  For example,\n```JSON\n\"scope\": {\n    \"locations\": [\"deleted-nodes\"]\n}\n```\nYou can specify templates using the **templates JSON body parameter**, for example:\n```JSON\n\"templates\": [{\"name\": \"_PERSON\",\"template\": \"|%firstName OR |%lastName OR |%userName\"},\n              {\"name\": \"mytemplate\",\"template\": \"%cm:content\"}]\n```\n\nFor **spell checking** you can use a query like this:\n```JSON\n{\n  \"query\": {\n    \"query\": \"cm:title:alfrezco\",\n    \"language\": \"afts\"\n  },\n  \"spellcheck\": {\"query\": \"alfrezco\"}\n}\n```\n\nIf you are already specifying \"userQuery\" then the following may be easier\nand produces the same result :\n```JSON\n{\n  \"query\": {\n    \"query\": \"cm:title:alfrezco\",\n    \"userQuery\": \"alfrezco\",\n    \"language\": \"afts\"\n  },\n  \"spellcheck\": {}\n}\n```\n\nThe spellcheck response includes a spellCheck context like this:\n```JSON\n\"context\": {\n  \"spellCheck\": {\n    \"type\": \"searchInsteadFor\",\n    \"suggestions\": [\"alfresco\"]\n  }\n},\n```\n\nTo specify defaults, you  use a **defaults JSON body parameter**, for example:\n```JSON\n\"defaults\": {\n  \"textAttributes\": [\n    \"cm:content\", \"cm:name\"\n  ],\n  \"defaultFTSOperator\": \"AND\",\n  \"defaultFTSFieldOperator\": \"OR\",\n  \"namespace\": \"cm\",\n  \"defaultFieldName\": \"PATH\"\n}\n```\n\nYou can specify several filter queries using the **filterQueries JSON body parameter**, for example:\n```JSON\n\"filterQueries\": [{\"query\": \"TYPE:'cm:folder'\"},{\"query\": \"cm:creator:mjackson\"}]\n```\n\nYou can specify several facet queries using the **facetQueries JSON body parameter**, for example:\n```JSON\n\"facetQueries\": [{\"query\": \"created:2016\",\"label\": \"CreatedThisYear\"}]\n```\nThe response will contain a matching \"context\" section, the \"label\" will match the facet query.\n```JSON\n\"context\": {\n  \"facetQueries\": [\n    {\"label\": \"CreatedThisYear\",\"count\": 3}\n  ]\n},\n```\n\nA complete query for facetting via the content.size field looks this:\n```JSON\n{\n  \"query\": {\n    \"query\": \"presentation\",\n    \"language\": \"afts\"\n  },\n    \"facetQueries\": [\n        {\"query\": \"content.size:[0 TO 10240]\", \"label\": \"xtra small\"},\n        {\"query\": \"content.size:[10240 TO 102400]\", \"label\": \"small\"},\n        {\"query\": \"content.size:[102400 TO 1048576]\", \"label\": \"medium\"},\n        {\"query\": \"content.size:[1048576 TO 16777216]\", \"label\": \"large\"},\n        {\"query\": \"content.size:[16777216 TO 134217728]\", \"label\": \"xtra large\"},\n        {\"query\": \"content.size:[134217728 TO MAX]\", \"label\": \"XX large\"}\n  ],\n    \"facetFields\": {\"facets\": [{\"field\": \"'content.size'\"}]}\n}\n```\n\nThe response will contain a matching \"context\" section, the \"label\" will match the facet query.\n```JSON\n\"context\": {\n  \"facetQueries\": [\n    { \"label\": \"small\",\"count\": 2 },\n    { \"label\": \"large\",\"count\": 0 },\n    { \"label\": \"xtra small\",\"count\": 5 },\n    { \"label\": \"xtra large\",\"count\": 56},\n    { \"label\": \"medium\",\"count\": 4 },\n    { \"label\": \"XX large\", \"count\": 1 }\n  ]\n},\n```\n\nYou can specify several facet fields using the **facetFields JSON body parameter**, for example:\n```JSON\n\"facetFields\": {\"facets\": [{\"field\": \"creator\", \"mincount\": 1}, {\"field\": \"modifier\", \"mincount\": 1}]}\n```\nThe response will contain a matching \"context\" section, the \"label\" will match the facet field.\n```JSON\n\"context\": {\n   \"facetsFields\": [\n     {  \"label\": \"creator\",\n        \"buckets\": [\n          { \"label\": \"System\", \"count\": 75 },\n          { \"label\": \"mjackson\", \"count\": 5 }\n        ]},\n     {  \"label\": \"modifier\",\n        \"buckets\": [\n          { \"label\": \"System\", \"count\": 72 },\n          { \"label\": \"mjackson\", \"count\": 5 },\n          { \"label\": \"admin\", \"count\": 3 }\n        ]}\n   ]\n},\n```\nAn example query for **search highlighting** could look like this:\n```JSON\n{\n  \"query\": {\n    \"query\": \"description:workflow\",\n    \"userQuery\":\"workflow\"\n  },\n  \"highlight\": {\n    \"prefix\": \"¿\",\n    \"postfix\": \"?\",\n    \"mergeContiguous\": true,\n    \"fields\": [\n      {\n        \"field\": \"cm:title\"\n      },\n      {\n        \"field\": \"description\",\n        \"prefix\": \"(\",\n        \"postfix\": \")\"\n      }\n\n    ]\n  }\n}\n```\nThe example above changes the highlighting prefix and postfix from the\n default <em> for all fields to ¿? and just for the \"description\" field to ().\n The hightlight information is added in each node entry response; here is\n an example partial response:\n```\n\"entry\": {\n        \"createdAt\": \"2016-10-12T15:24:31.202+0000\",\n        \"isFolder\": true,\n        \"search\": {\n          \"score\": 1,\n          \"highlight\": [\n            {\n              \"field\": \"cm:title\",\n              \"snippets\": [\n                \"Customized ¿Workflow? Process Definitions\"\n              ]\n            },\n            {\n              \"field\": \"description\",\n              \"snippets\": [\n                \"Customized (Workflow) Process Definitions\"\n              ]\n            }\n          ]\n      },\n```\n","operationId":"search","produces":["application/json"],"parameters":[{"in":"body","name":"queryBody","description":"Generic query API\n","required":true,"schema":{"required":["query"],"properties":{"query":{"$ref":"#/definitions/RequestQuery"},"paging":{"$ref":"#/definitions/RequestPagination"},"include":{"$ref":"#/definitions/RequestInclude"},"fields":{"$ref":"#/definitions/RequestFields"},"sort":{"$ref":"#/definitions/RequestSortDefinition"},"templates":{"$ref":"#/definitions/RequestTemplates"},"defaults":{"$ref":"#/definitions/RequestDefaults"},"filterQueries":{"$ref":"#/definitions/RequestFilterQueries"},"facetQueries":{"$ref":"#/definitions/RequestFacetQueries"},"facetFields":{"$ref":"#/definitions/RequestFacetFields"},"spellcheck":{"$ref":"#/definitions/RequestSpellcheck"},"scope":{"$ref":"#/definitions/RequestScope"},"limits":{"$ref":"#/definitions/RequestLimits"},"highlight":{"$ref":"#/definitions/RequestHighlight"}}}}],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/ResultSetPaging"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/Error"}}},"x-alfresco-since":"5.2"}}},"securityDefinitions":{"basicAuth":{"description":"HTTP Basic Authentication","type":"basic"}},"definitions":{"Error":{"type":"object","required":["error"],"properties":{"error":{"type":"object","properties":{"errorKey":{"type":"string"},"briefSummary":{"type":"string"},"descriptionURL":{"type":"string"},"logId":{"type":"string"},"stackTrace":{"type":"string"},"statusCode":{"type":"integer","format":"int32"}},"required":["briefSummary","descriptionURL","stackTrace","statusCode"]}}},"RequestInclude":{"type":"array","description":"Returns additional information about the node. The following optional fields can be requested:\n * properties\n * aspectNames\n * path\n * isLink\n * allowableOperations\n * association\n","items":{"type":"string","enum":["allowableOperations","aspectNames","isLink","isLocked","path","properties"]}},"RequestFields":{"type":"array","description":"A list of field names.\nYou can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.\nThe list applies to a returned individual entity or entries within a collection.\nIf the **include** parameter is used aswell then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.","items":{"type":"string"}},"RequestQuery":{"type":"object","required":["query"],"properties":{"language":{"type":"string","description":"The query language in which the query is written.","enum":["afts","lucene","cmis"],"default":"afts"},"userQuery":{"type":"string","description":"The exact search request typed in by the user"},"query":{"type":"string","description":"The query which may have been generated in some way from the userQuery"}},"description":"Query."},"ResultSetPaging":{"type":"object","properties":{"list":{"type":"object","properties":{"entries":{"type":"array","items":{"$ref":"#/definitions/ResultSetRowEntry"}},"pagination":{"$ref":"#/definitions/Pagination"},"context":{"$ref":"#/definitions/ResultSetContext"}}}},"description":"Query results"},"ResultSetContext":{"type":"object","properties":{"consistency":{"$ref":"#/definitions/ResponseConsistency"},"facetQueries":{"type":"array","description":"The counts from facet queries","items":{"type":"object","properties":{"count":{"type":"number"},"label":{"type":"string"}}}},"facetFields":{"type":"array","description":"The counts from field facets","items":{"type":"object","properties":{"buckets":{"type":"array","description":"An array of buckets and values","items":{"type":"object","properties":{"display":{"type":"object","description":"An optional field for additional display information","properties":{}},"count":{"type":"number","description":"The count for the bucket"},"label":{"type":"string","description":"The bucket label"}}}},"label":{"type":"string","description":"The field name or its explicit label, if provided on the request"}}}},"spellcheck":{"type":"array","description":"Suggested corrections\n\nIf zero results were found for the original query then a single entry of type \"searchInsteadFor\" will be returned.\nIf alternatives were found that return more results than the original query they are returned as \"didYouMean\" options.\nThe highest quality suggestion is first.\n","items":{"type":"object","properties":{"suggestion":{"type":"array","description":"A suggested alternative query","items":{"type":"string"}},"type":{"type":"string","enum":["searchInsteadFor","didYouMean"]}}}}},"description":"Context that applies to the whole result set"},"ResultSetRowEntry":{"type":"object","required":["entry"],"properties":{"entry":{"$ref":"#/definitions/ResultNode"}},"description":"A row in the result set"},"ResultNode":{"allOf":[{"$ref":"#/definitions/Node"},{"type":"object","properties":{"search":{"$ref":"#/definitions/SearchEntry"},"archivedByUser":{"$ref":"#/definitions/UserInfo"},"archivedAt":{"type":"string","format":"date-time"},"versionLabel":{"type":"string"},"versionComment":{"type":"string"}}}]},"SearchEntry":{"type":"object","properties":{"score":{"type":"number","format":"float","description":"The score for this row"},"highlight":{"type":"array","description":"Highlight fragments if requested and available. A match can happen in any of the requested field.\n","items":{"type":"object","properties":{"field":{"type":"string","description":"The field where a match occured (one of the fields defined on the request)"},"snippets":{"type":"array","description":"Any number of snippets for the specified field highlighting the matching text","items":{"type":"string","description":"The highlighted fragment for the field."}}}}}}},"Node":{"type":"object","required":["createdAt","createdByUser","id","isFile","isFolder","modifiedAt","modifiedByUser","name","nodeType"],"properties":{"id":{"type":"string"},"name":{"type":"string","description":"The name must not contain spaces or the following special characters: * \" < > \\ / ? : and |.\nThe character . must not be used at the end of the name.\n","pattern":"^(?!(.*[\\\"\\*\\\\\\>\\<\\?\\/\\:\\|]+.*)|(.*[\\.]?.*[\\.]+$)|(.*[ ]+$))"},"nodeType":{"type":"string"},"isFolder":{"type":"boolean"},"isFile":{"type":"boolean"},"isLocked":{"type":"boolean","default":false},"modifiedAt":{"type":"string","format":"date-time"},"modifiedByUser":{"$ref":"#/definitions/UserInfo"},"createdAt":{"type":"string","format":"date-time"},"createdByUser":{"$ref":"#/definitions/UserInfo"},"parentId":{"type":"string"},"isLink":{"type":"boolean"},"content":{"$ref":"#/definitions/ContentInfo"},"aspectNames":{"type":"array","items":{"type":"string"}},"properties":{"type":"object","properties":{}},"allowableOperations":{"type":"array","items":{"type":"string"}},"path":{"$ref":"#/definitions/PathInfo"}}},"UserInfo":{"type":"object","required":["displayName","id"],"properties":{"displayName":{"type":"string"},"id":{"type":"string"}}},"ContentInfo":{"type":"object","required":["mimeType","mimeTypeName","sizeInBytes"],"properties":{"mimeType":{"type":"string"},"mimeTypeName":{"type":"string"},"sizeInBytes":{"type":"integer"},"encoding":{"type":"string"},"mimeTypeGroup":{"type":"string"}}},"PathElement":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"PathInfo":{"type":"object","properties":{"elements":{"type":"array","items":{"$ref":"#/definitions/PathElement"}},"name":{"type":"string"},"isComplete":{"type":"boolean"}}},"RequestDefaults":{"type":"object","properties":{"textAttributes":{"type":"array","description":"A list of query fields/properties used to expand TEXT: queries.\nThe default is cm:content.\nYou could include all content properties using d:content or list all individual content properties or types.\nAs more terms are included the query size, complexity, memory impact and query time will increase.\n","items":{"type":"string","default":"cm:content"}},"defaultFTSOperator":{"type":"string","description":"The default way to combine query parts when AND or OR is not explicitly stated - includes ! - +\none two three\n(one two three)\n","enum":["AND","OR"],"default":"AND"},"defaultFTSFieldOperator":{"type":"string","description":"The default way to combine query parts in field query groups when AND or OR is not explicitly stated - includes ! - +\nFIELD:(one two three)\n","enum":["AND","OR"],"default":"AND"},"namespace":{"type":"string","description":"The default name space to use if one is not provided","default":"cm"},"defaultFieldName":{"type":"string","default":"TEXT"}},"description":"Common query defaults"},"RequestTemplates":{"type":"array","description":"Templates usewd for query expansion.\nA template called \"WOOF\" defined as \"%(cm:name cm:title)\" allows\nWOOF:example\nto generate\ncm:name:example cm:name:example\n","items":{"type":"object","properties":{"template":{"type":"string","description":"The template"},"name":{"type":"string","description":"The template name"}}}},"RequestScope":{"type":"object","properties":{"locations":{"type":"string","description":"The locations to include in the query\n","enum":["nodes","versions","deleted-nodes"]}},"description":"Scope"},"RequestPagination":{"type":"object","properties":{"maxItems":{"type":"integer","description":"The maximum number of items to return in the query results","minimum":1.0},"skipCount":{"type":"integer","description":"The number of items to skip from the start of the query set","minimum":0.0}}},"Pagination":{"type":"object","required":["count","hasMoreItems","maxItems","skipCount"],"properties":{"count":{"type":"integer","format":"int64","description":"The number of objects in the entries array.\n"},"hasMoreItems":{"type":"boolean","description":"A boolean value which is **true** if there are more entities in the collection\nbeyond those in this response. A true value means a request with a larger value\nfor the **skipCount** or the **maxItems** parameter will return more entities.\n"},"totalItems":{"type":"integer","format":"int64","description":"An integer describing the total number of entities in the collection.\nThe API might not be able to determine this value,\nin which case this property will not be present.\n"},"skipCount":{"type":"integer","format":"int64","description":"An integer describing how many entities exist in the collection before\nthose included in this list.\n"},"maxItems":{"type":"integer","format":"int64","description":"The value of the **maxItems** parameter used to generate this list,\nor if there was no **maxItems** parameter the default value is 100\n"}}},"ResponseConsistency":{"type":"object","properties":{"lastTxId":{"type":"integer","description":"The id of the last indexed transaction"}},"description":"The consistency state of the index used to execute the query"},"RequestFacetQueries":{"type":"array","description":"Facet queries to include","items":{"type":"object","properties":{"query":{"type":"string","description":"A facet query"},"label":{"type":"string","description":"A label to include in place of the facet query"}}}},"RequestFacetFields":{"type":"object","properties":{"facets":{"type":"array","description":"Define specifc fields on which to facet (adds SOLR facet.field and f.<field>.facet.* options)\n","items":{"type":"object","properties":{"field":{"type":"string","description":"The facet field"},"method":{"type":"string","enum":["ENUM","FC"]},"offset":{"type":"integer"},"excludeFilters":{"type":"array","description":"Filter Queries with tags listed here will not be included in facet counts.\nThis is used for multi-select facetting.\n","items":{"type":"string"}},"prefix":{"type":"string","description":"Restricts the possible constraints to only indexed values with a specified prefix."},"mincount":{"type":"integer","description":"The minimum count required for a facet field to be included in the response."},"missing":{"type":"boolean","description":"When true, count results that match the query but which have no facet value for the field (in addition to the Term-based constraints).","default":false},"limit":{"type":"integer"},"facetEnumCacheMinDf":{"type":"integer"},"sort":{"type":"string","enum":["COUNT","INDEX"]}}}}},"description":"Simple facet fields to include\nThe Properties reflect the global properties related to field facts in SOLR.\nThey are descripbed in detail by the SOLR documentation\n"},"RequestLimits":{"type":"object","properties":{"permissionEvaluationTime":{"type":"integer","description":"Maximum time for post query permission evaluation"},"permissionEvaluationCount":{"type":"integer","description":"Maximum count of post query permission evaluations"}},"description":"Limit the time and resources used for query execution"},"RequestFilterQueries":{"type":"array","description":"Filter Queries. Constraints that apply to the results set but do not affect the score of each entry.","items":{"type":"object","properties":{"query":{"type":"string","description":"The filter query expression.\nFor multi-select facets selected facets must be order together\n"},"tags":{"type":"array","description":"Tags used exclude the filters from facet evaluation for multi-select facet support","items":{"type":"string"}}}}},"RequestSortDefinition":{"type":"array","description":"How to sort the rows? An array of sort specifications. The array order defines the ordering precedence.","items":{"type":"object","properties":{"field":{"type":"string","description":"The name of the field"},"type":{"type":"string","description":"How to order - using a field, when position of the document in the index, score/relevence.","enum":["FIELD","DOCUMENT","SCORE"],"default":"FIELD"},"ascending":{"type":"boolean","description":"The sort order. (The ordering of nulls is determined by the SOLR configuration)","default":false}}}},"RequestSpellcheck":{"type":"object","properties":{"query":{"type":"string"}},"description":"Request that spellcheck fragments to be added to result set rows\nThe properties reflect SOLR spellcheck parameters.\n"},"RequestHighlight":{"type":"object","properties":{"prefix":{"type":"string","description":"The string used to mark the start of a highlight in a fragment."},"postfix":{"type":"string","description":"The string used to mark the end of a highlight in a fragment."},"snippetCount":{"type":"number","description":"The maximum number of distinct highlight snippets to return for each highlight field."},"fragmentSize":{"type":"number","description":"The character length of each snippet."},"maxAnalyzedChars":{"type":"number","description":"The number of characters to be considered for highlighting. Matches after this count will not be shown."},"mergeContiguous":{"type":"boolean","description":"If fragments over lap they can be  merged into one larger fragment"},"usePhraseHighlighter":{"type":"boolean","description":"Should phrases be identified."},"fields":{"type":"array","description":"The fields to highlight and field specific configuration properties for each field","items":{"type":"object","properties":{"fragmentSize":{"type":"number"},"mergeContiguous":{"type":"boolean"},"snippetCount":{"type":"number"},"field":{"type":"string","description":"The name of the field to highlight."},"prefix":{"type":"string"},"postfix":{"type":"string"}}}}},"description":"Request that highlight fragments to be added to result set rows\nThe properties reflect SOLR highlighting parameters.\n"}},"securityRequirement":[{"basicAuth":[]}]}